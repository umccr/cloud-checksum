name: test

on:
  push:
    tags:
      - '*'

#on:
#  push:
#    branches:
#      - main
#  pull_request:

jobs:
#  test:
#    runs-on: ubuntu-latest
#    env:
#      CARGO_INCREMENTAL: 0
#      SCCACHE_GHA_ENABLED: "true"
#      RUSTC_WRAPPER: "sccache"
#    steps:
#      - name: Cache
#        uses: mozilla-actions/sccache-action@v0.0.8
#      - name: Check out
#        uses: actions/checkout@v4
#      - name: Install Rust
#        uses: dtolnay/rust-toolchain@master
#        with:
#          toolchain: stable
#          components: rustfmt, clippy
#      - name: Cargo fmt
#        run: cargo fmt --all -- --check
#      - name: Cargo clippy
#        run: cargo clippy --all-targets --all-features  -- -D warnings
#      - name: Run cargo tests
#        if: always()
#        run: cargo test --all-features -- --nocapture
#      - name: Run md5
#        if: always()
#        run: md5sum data/test_file && sha1sum data/test_file && sha256sum data/test_file
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-22.04-arm
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-13
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
#      - name: Run cargo bloat
#        uses: orf/cargo-bloat-action@v1
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: cloud-checksum
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
